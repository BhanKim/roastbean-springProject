<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD 3.0//EN"
						"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.rb.base.dao.MProductDao">
	
	<!-- rownum MPlist -->
	<select id="mpListrow" resultType="Integer">
		SELECT count(*) as totalCount from product as p WHERE p.product_id 
	</select>
	
	<!-- Select Product list -->
	<select id="mpList" resultType="com.rb.base.model.ProductDto">
	SELECT * FROM ( select row_number() over(order by product_id)
	as rownum, p.product_id, p.product_name, p.product_weight, p.product_info, 
	p.product_price, p.product_stock, p.product_image
	FROM product as p ) A 
	where <![CDATA[rownum <= #{rowCount}]]> and <![CDATA[rownum >= #{start}]]>
	order by product_id desc
	</select>

	<insert id="insertproduct">
		insert into product
		(product_name, product_weight, product_info, product_image, product_price, product_stock, product_initdate)
		values
		(#{product_name}, #{product_weight}, #{product_info}, #{product_image}, #{product_price}, #{product_stock}, now())
	</insert>
	
	<select id="maxproduct_id" resultType="Integer">
		select max(product_id) from product
	</select>
	
	<insert id="insertcategory">
		insert into category
		(category_type, product_id, category_acidity, category_body, category_aroma, category_sweet)
		values
		(#{category_type}, #{product_id}, #{category_acidity}, #{category_body}, #{category_aroma}, #{category_sweet})
	</insert>
	
	
	
	
	<!-- 상품 detail페이지 들어가기 -->
	<select id="mproductdetail" resultType="com.rb.base.model.ProductDto">
		select p.product_id, p.product_name, p.product_weight, p.product_info, p.product_price, p.product_stock , p.product_image,
		c.category_type, c.category_acidity, c.category_aroma, c.category_body, c.category_sweet
		from product as p, category as c
		where c.product_id=p.product_id and p.product_id = #{product_id};
	</select>
	
	<!-- 상품 수정 페이지에 들어가기 -->
	<select id="mproductdetailupdate" resultType="com.rb.base.model.ProductDto">
		select p.product_id, p.product_name, p.product_weight, p.product_info, p.product_price, p.product_stock , p.product_image,
		c.category_type, c.category_acidity, c.category_aroma, c.category_body, c.category_sweet
		from product as p, category as c
		where c.product_id=p.product_id and p.product_id = #{product_id};
	</select>
	
	
	<!-- DB에 저장된 사진의 명칭을 가져오기 위한 쿼리문 -->
	<select id="mproductdetailimages" resultType="com.rb.base.model.ProductDto">
		select product_image from product where product_id=#{product_id};
	</select>
	
	<!-- 상품 수정하기 -->
	<update id="mproductdetailupdateinsert">
		UPDATE product as p, category as c SET 
		p.product_image= #{product_image},
		p.product_name=#{product_name}, 
		p.product_price=#{product_price},
		p.product_info=#{product_info},
		p.product_weight=#{product_weight},
		
		c.category_type=#{category_type}, 
		c.category_acidity=#{category_acidity}, 
		c.category_aroma=#{category_aroma}, 
		c.category_body=#{category_body}, 
		c.category_sweet=#{category_sweet},
		
		p.product_stock =${product_stock},
		p.product_updatedate=now()
		
		where c.product_id=p.product_id and p.product_id = #{product_id} ;
	</update>
	
	<!-- 상품 삭제 날짜 넣기 -->
	<update id="mproductdetaildelete">
		update product set product_deletedate=now() where product_id=#{product_id};
	</update>
	
</mapper>